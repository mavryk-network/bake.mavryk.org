[{"body":"Preparation Installing BakeBuddy CLI (bb-cli) and using it to setup your Tezos baker is very simple. You will need the following tools:\nSpare computer or existing computer with Linux installed. We recommend Ubuntu Linux. (note: you must have an SSD drive or better \u0026 at least 8GB RAM) Ledger Nano S hardware wallet with Tezos Wallet \u0026 Baker apps installed. (note: it’s necessary to use Ledger Live to install the Tezos Wallet \u0026 Baking applications; to install the latter you must enable developer mode in Ledger Live settings) Installation Download and copy bb-cli To begin, download the latest bb-cli version for your Linux desktop and copy it to a universally available location so you can execute BB-CLI command from any location. Using the commands below, typed or pasted one-by-one is the intended order of operations. If you have a regular Intel or AMD computer that’s not “ARM” based.\ncd /tmp \u0026\u0026 wget https://gitlab.com/groktech/bakebuddy-cli/-/raw/main/bb-cli-linux-amd64 \u0026\u0026 chmod +x bb-cli-linux-amd64 sudo mv bb-cli-linux-amd64 /usr/sbin/bb-cli # you may be prompted for sudo password; execute 1 line at a time If you have a Raspberry Pi or you’re running Linux on macOS M1 architecture:\ncd /tmp \u0026\u0026 wget https://gitlab.com/groktech/bakebuddy-cli/-/raw/main/bb-cli-linux-arm64 \u0026\u0026 chmod +x bb-cli-linux-arm64 sudo mv bb-cli-linux-arm64 /usr/sbin/bb-cli # you may be prompted for sudo password; execute 1 line at a time Setup Tezos node, signer and install bb-cli dependencies bb-cli setup -a # you may be prompted for sudo password Bootstrap Tezos node At this stage, it’s necessary to bootstrap your node, meaning to download a copy of the blockchain so you don’t have to synchronize block-by-block, which takes hours at best. With the import method shown below, bootstrapping could take as little as 5 minutes.\nbb-cli bootstrap-node --tarball Start Tezos node After importing the snapshot, you need to start your node and wait until it’s fully synchronized before importing your Ledger key.\nbb-cli start After starting the node, run the following command over and over every few minutes and monitor the “level” displayed.\nbb-cli info Level refers to the latest block number on mainnet. Navigate to https://tzkt.io or https://tzstats.com and observe the latest block. Once the level in your command matches the latest block on your blockchain explorer, your node is in full sync and you can keep following the steps below.\nImport Ledger key Now that your node is in full sync, you can import your Ledger key. You will need to connect your Ledger and enter your Ledger PIN. Then open the Tezos Baking app.\nbb-cli import-key --derivation-path=\"ed25519/0h/0h\" # If you have a custom derivation path, you can change ed to bip as shown (--derivation-path=\"bip25519/3h/6h/9h\") The ledger will ask you twice to confirm this operation. Make sure the baker you see on the ledger screen matches the one you want to use. If you don’t have this information yet, don’t worry. To get the address of the ledger that’s used by default simply go to https://kukai.app and login with ledger, accepting the default derivation path.\nbip is supposed to be more strong in the long term than ed25519, which is the default one. Including it in the command above as shown does not change the default behavior but it shows which path is default so it can be customized for preference and security.\nPutting the baker on a non-default derivation path provides an additional layer of security for your baker at the cost of extra complexity for you. Make sure your setup is clearly documented for your own records.\nAuthorize Ledger to bake for key Having imported your Ledger key to your signer, it’s time to authorize your Ledger to bake for this key.\nbb-cli setup-ledger --main-hwm 1 # Pay careful attention to the value of --main-hwm If your device was used to bake before it might have a “high watermark” aka HWM. If you try to use this device on a testnet, it will not work because the block height on test networks usually starts with 1 while mainnet is up to over a couple of million blocks at the time of writing. If you used to bake on mainnet with the same ledger as you’re trying to use now but it’s been a while, it’s highly recommended to change the 1 above to the current Tezos block, which can be found at.\nThe watermark is simply a record of the lack block number your ledger helped to bake or endorse. If you’re setting up a brand new device that’s not been used for baking before, there is no need to alter the default command above.\nAlways make sure you’re not accidentally going to double bake by using your production ledger and/or setup to bake on a testnet. It’s really easy to make this mistake and the only thing preventing it are your personal standard operating procedures.\nRegister Ledger key as baker on the blockchain For this step your node level must be synced with the latest block on the blockchain explorer. You must also temporarily open your Ledger Tezos Wallet app to register your key as a baker. For all other operations, you must use the Tezos Baking app.\nbb-cli register-key Registering is not necessary if this is already an active baker ledger which is being setup on some kind of failover machine or in a situation where it has not been over 2 weeks of actively baking.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Preparation Installing BakeBuddy CLI (bb-cli) and using it to setup your Tezos baker is very simple. You will need the following tools:\nSpare computer or existing computer with Linux installed. We …","ref":"/tezbake/tutorials/how-to-bake/","tags":"","title":"\u003e How to Bake"},{"body":"Preparation There is minimal preparation needed to utilize TezPay, assuming that you have a functioning public baker running. To get help with setting up a baker see YourBakeBuddy - Setting up a public Baker.\nPreparation Summary\nCreate a directory (folder) on your desktop (or appropriate location) to store the application files and required config files Download the Tezpay software, sample configuration, and payout wallet files from github Create a ‘pay-out’ wallet and store the private key (not baker or hot wallet) Preparation: Step 1 Create TezPay Directory Create a new folder on the desktop or in a location that you want to store the necessary files for Tezpay.\nThis folder will eventually contain 3 files:\nTezPay Application File Configuration File Private-Key File The TezPay Application File will execute the commands that will run TezPay, the Configuration File will essentially tell the application file how to run and will be edited by the baker (we will cover this later), and the Private-Key File will contain the private key for a wallet you have designated to pay your delegators (we will explain an easy way to get this later as well). A note on the Private-key file - it is not recommended to use an existing wallet that may house important assets (including NFT’s or crypto tokens) but to create a new wallet that contains only enough Tezos to pay out delegates.\nPreparation: Step 2 Download Files Download the software from Github using the link: https://github.com/alis-is/tezpay/releases. In this repository, select the correct operating system and system architecture (arm64 or amd64). For this example we will be using arm64\nNote: If you do not know the system architecture you can find out by opening a Terminal and executing the command uname -m, and this will return the system architecturearm64 or amd64.\nThe example below displays arm64\nIf you would rather utilize CLI to download the application you will need to change directory (cd) to the TezPay directory created in step 1 in the terminal, then use command wget -q https://raw.githubusercontent.com/alis-is/tezpay/main/install.sh -O /tmp/install.sh \u0026\u0026 sh /tmp/install.sh\nSee example code below (note: input begins after last ‘%’ character):\nThe above example is an alternative to downloading from the GitHub repository\nNext, you will download the sample configuration file \u0026 payout_wallet_private.sample.key file from : https://github.com/alis-is/tezpay/blob/main/docs/configuration/ - or you can open file in GitHub and copy text to a text editor.\nNote, there are two choices for the configuration files:\nSimple Config file : config.default.hjson (basic arguments to run Tezpay) Full Config: config.sample.hjson (advanced arguements to run Tezpay) Preparation: Step 3 - Payout Wallet (optional) Lastly, you will need to download the create a new wallet and retrieve the private key. We will be using the Temple Wallet extension to create a new wallet and to get the private key. If you already have a payout wallet, or know how, skip this section.\nFirst, open Temple Wallet and select the icon in upper right Next, select ’new account’, and input a new (ie Tezpay1) Then, click the icon in the upper right again Then, go to Settings Then, go to Reveal Private Key Then, you will be prompt to input your password for the account Your private key will be displayed here:\nSetup The next section will review the setup needed for Tezpay. We will review the Configuration File and Payout Wallet files. In this section we will review:\nConfiguration File (simple) Configuration File (advanced) Private-Key File Setup: Step 1a: Configuration File (simple) This section will review how to setup the configuration file (simple-version) to be used by the TezPay application.\n*Note: must have file name config.hjson, case-sensitive *\nYellow is areas you will input data/edit fields\nBlue are comments about Configuration File objects\nPaste your Baker wallet in between the quotes Set your Baker fee (ie 0.05 = 5% fee) Input minimum payout for delegators (ie. 1 = 1 XTZ) This section allows you to split payments for baking (Bonds) and fees from delegators (Fees) if you want - input Baker wallet address and percentage to split. This example does not split, where 1=100% to baker wallet. This section refers to network parameters to fetch information about the baker in order to compile rewards and payouts - Do not edit unless you are an experienced user Over delegation projection prohibits you from over paying beyond your delegation limit - Do not edit unless you are an experience user This is as basic configuration file for running the TezPay application. The next section will review the advanced configuration file, giving more options and customization to the TezPay application. A user may splice sections from the advanced file to the simple to build a custom file as well - but should be done by experienced users.\nSetup: Step 1b: Configuration File (advanced) This section will review how to setup the configuration file (advanced-version) to be used by the TezPay application.\n*Note: must have file name config.hjson, case-sensitive *\nYellow is areas you will input data/edit fields Blue are comments about Configuration File objects\nPaste your Baker wallet in between the quotes Set your Baker fee (ie 5% = 0.05) Input minimum payout for delegators (ie. 1 = 1 XTZ) Input minimum staking balance for delegators Input delegators wallets that you wish to ignore completely (not often used) Overrides: These will override global settings for delegators - you may delete/remove specific fields where you want to ignore Input wallet address for specific delegator you wish to apply overrides for Input a delegator-specific custom fee (ie 0.5% = 0.005) Input either true or false where true removes the fee from delegator, and false applies the fee specified in the line above Input minimum balance override for specified wallet\\ If you wish to add multiple wallets for over rides, add another wallet following same format keeping the { } to contain the wallet attribute as shown. This section allows you to split payments for baking (Bonds), input wallet address and percentage to allocate (see example above for structure of more than 1 wallet. 100%=1.00 This section allows you to split payments for fees collected (Fees), input wallet address and percentage to allocate (see example above for structure of more than 1 wallet. 100%=1.00 Donations refer to donating a specific amount of XTZ to wallets every payout Input a donation amount in donate field as a percentage (ie 2.5% = 0.025) Input wallets that you wish to donate to and percentage for each (ie 100% = 1.0) This section refers to network parameters to fetch information about the baker in order to compile rewards and payouts Do not edit unless you are an experienced user Over delegation projection prohibits you from over paying beyond your delegation limit Do not edit unless you are an experience user This section allows for automatic notifications/messages to be sent to specific platforms in order to broadcast messages (ie ‘Bakery has paid 100XTZ in rewards for latest cycle’ We will cover this in a separate section see appendix X and platforms supported are Twitter, Discord, and E-mail Setup: Step 2: Private-Key File The Private Key file is used to sign the transaction(s) that will payout the rewards. From a security perspective, it is recommended NOT to use the Baker private key due to security concerns with the private key being displayed in plain-text in a file. This section will use the new account and private-key that was acquired in Step 3 - Payout Wallet.\nRetrieve the private-key of the wallet you wish to use from the payout wallet of your choice Paste into a text file (or replace the example that was downloaded from the GitHub repository Save the file with exact file name and extension payout_wallet_private.key - note: the .key is required in this instance (see below) Setup: Summary At this point there should be 3 files in the directory tezpay. These three files will be used to run the application and payouts.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Preparation There is minimal preparation needed to utilize TezPay, assuming that you have a functioning public baker running. To get help with setting up a baker see YourBakeBuddy - Setting up a …","ref":"/tezpay/tutorials/how-to-setup/","tags":"","title":"\u003e How to Setup"},{"body":"Tezos proposal voting The Tezos proposal process consists of 5 stages, each of which lasts for 5 cycles (~14 days). Briefly, the proposal process is as follows:\nProposal. If no proposal gets more than 5% of the state to vote for it, the proposal process repeats indefinitely. As soon as a proposal gets 5% of the state to vote for it, the proposal process moves to the next stage. In cases where there are multiple 5%+ proposals on the table, the proposal with the most votes wins. Exploration Proposal needs to hit quorum (around 50% of all stake voting in some way) and it needs to further hit an acceptance level of 80%+. If it fails to meet these thresholds, the process resets back to the Proposal stage. Cooldown The proposal is tested on a dedicated test network to make sure it migrates and runs. Dapp developers make sure this proposal doesn’t break their dapps. Promotion Proposal needs to hit quorum (around 50% of all stake voting in some way) and it needs to further hit an acceptance level of 80%+. If it fails to meet these thresholds, the process resets back to the Proposal stage. Adoption The proposal is officially accepted and goes into effect at the end of the Adoption stage. The Ghostnet test network is upgraded as a final test before Mainnet adoption. Dapp developers make sure this proposal doesn’t break their dapps and make any necessary changes to their dapps. We recommend you read more about the Tezos Voting process here: https://tezos.gitlab.io/active/voting.html\nProposal voting with TezGov TezGov allows you to participate in Tezos proposal voting with your Ledger hardware wallet.\nWe recommend using a secondary Ledger device with the same seed, to vote with while your primary device is baking. You can also briefly unplug your primary Ledger baking device and use it on a different computer just for voting purposes (use the wallet app to vote), then immediately plugging it back into the primary device, opening the baking app and resuming baking only. If your baking computer itself has a graphical interface, you can briefly switch to the wallet app on your Ledger device and vote, then switch back to the baking app and resume baking only. In order to vote using your Ledger device, you must have the Tezos wallet app installed and open on your Ledger device. If you have the baking app open, you will not be able to vote\nTezGov Web Portal TezGov Web Portal: https://gov.tez.capital\nLog into the TezGov portal by using the most secure method available to you.\nWe highly recommend using the direct Ledger login at the top. This method allows you to see the specific details of your vote on your Ledger screen. Use the Remote (signer) method if you have a signer somewhere on your LAN or local computer. This is an option for advanced users. Use the Beacon method if you are using a Beacon enabled wallet like Temple or Kukai. In this case you will not see the exact details of your vote on your Ledger screen and you will instead be asked to sign an arbitrary blob message. This method also works fine but it is inherently less secure than the direct Ledger method Once logged in you’ll see the TezGov home screen. You can see the current cycle, the current proposal, the current voting period, and the current voting period progress. You can also see the current proposal status and the current proposal details.\nExploration and Promotion Periods During the exploration and promotion periods you will see the period name Exploration or Promotion in the middle of the page. You can vote for the current proposal by clicking the NAY, PASS or YAY buttons.\nYou will be asked to confirm the vote on your Ledger device.\nOnce confirmed, the page will refresh within 30 seconds.\nAfter finished, you’ll be able to click on the confirmation link for your vote.\nCooldown Period During the cooldown period you will period name Cooldown in the middle of the page and you will not be able to vote until the next period. The time remaining is also reflected on the page.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Tezos proposal voting The Tezos proposal process consists of 5 stages, each of which lasts for 5 cycles (~14 days). Briefly, the proposal process is as follows:\nProposal. If no proposal gets more than …","ref":"/tezgov/tutorials/how-to-vote/","tags":"","title":"\u003e How to Vote"},{"body":"Getting Started with Tezos Baking Baking on Tezos refers to the act of validating and producing blocks on the Tezos blockchain. Baking is suited for individuals at home as well as companies in their on-premise data centers, and cloud providers.\nAt this time the TezBake software focuses on indivudals and companies baking on premise in their homes and own data centers. We do not support baking on cloud providers at this time. We support the most secure on-premise baking method which involves dedicating a small form factor computer to baking with a Ledger Nano S or Nano S Plus hardware wallet as the key storage device. This setup is inexpensive, widely available, and very secure. It does not require a very fast internet connection. It is also very easy to setup and maintain wit TezBake.\nThere is never any stake slashing on Tezos in the event of a hardware failure. You will merely not receive rewards for the period of time that the baking computer is down.\nAll blocks that you must bake are scheduled around 15 days in advance. You must be operational during the exact times of your block to receive rewards. There is no punishment for missing some of your endorsements as long as you are able to successfully endorse 67% of your endorsements each cycle, every 2.8 days.\nGetting Started ","categories":"","description":"","excerpt":"Getting Started with Tezos Baking Baking on Tezos refers to the act of validating and producing blocks on the Tezos blockchain. Baking is suited for individuals at home as well as companies in their …","ref":"/getting-started/","tags":"","title":"Getting Started with Baking"},{"body":"Ghostnet Ghostnet is Tezos’ perpetual testnet. In the context of TezBake, Ghostnet is intended to provide a no-consequences testing environment where you can learn how to properly bake and pay using TezBake and TezPay. It’s highly recommended for all serious bakers to have a Ghostnet setup running, to help test protocol migrations.\nPreparation Installing BakeBuddy CLI (bb-cli) and using it to setup your Tezos baker is very simple. You will need the following tools:\nSpare computer or existing computer with Linux installed. We recommend Ubuntu Linux. (note: you must have an SSD drive or better \u0026 at least 8GB RAM) Ledger Nano S hardware wallet with Tezos Wallet \u0026 Baker apps installed. (note: it’s necessary to use Ledger Live to install the Tezos Wallet \u0026 Baking applications; to install the latter you must enable developer mode in Ledger Live settings) Installation Download and copy bb-cli To begin, download the latest bb-cli version for your Linux desktop and copy it to a universally available location so you can execute BB-CLI command from any location. Using the commands below, typed or pasted one-by-one is the intended order of operations. If you have a regular Intel or AMD computer that’s not “ARM” based.\ncd /tmp \u0026\u0026 wget https://gitlab.com/groktech/bakebuddy-cli/-/raw/main/bb-cli-linux-amd64 \u0026\u0026 chmod +x bb-cli-linux-amd64 sudo mv bb-cli-linux-amd64 /usr/sbin/bb-cli # you may be prompted for sudo password; execute 1 line at a time If you have a Raspberry Pi or you’re running Linux on macOS M1 architecture:\ncd /tmp \u0026\u0026 wget https://gitlab.com/groktech/bakebuddy-cli/-/raw/main/bb-cli-linux-arm64 \u0026\u0026 chmod +x bb-cli-linux-arm64 sudo mv bb-cli-linux-arm64 /usr/sbin/bb-cli # you may be prompted for sudo password; execute 1 line at a time Setup Tezos node, signer and install bb-cli dependencies bb-cli setup -a --node-configuration=https://gitlab.com/groktech/xtz.configs/-/raw/main/ghostnet.json # you may be prompted for sudo password Bootstrap Tezos node At this stage, it’s necessary to bootstrap your node, meaning to download a copy of the blockchain so you don’t have to synchronize block-by-block, which takes hours at best. With the import method shown below, bootstrapping could take as little as 5 minutes.\nbb-cli bootstrap-node --tarball https://ghostnet.xtz-shots.io/rolling-tarball Start Tezos node After importing the snapshot, you need to start your node and wait until it’s fully synchronized before importing your Ledger key.\nbb-cli start After starting the node, run the following command over and over every few minutes and monitor the “level” displayed.\nbb-cli info Level refers to the latest block number on mainnet. Navigate to https://tzkt.io or https://tzstats.com and observe the latest block. Once the level in your command matches the latest block on your blockchain explorer, your node is in full sync and you can keep following the steps below.\nImport Ledger key Now that your node is in full sync, you can import your Ledger key. You will need to connect your Ledger and enter your Ledger PIN. Then open the Tezos Baking app.\nbb-cli import-key --derivation-path=\"ed25519/0h/0h\" # If you have a custom derivation path, you can change ed to bip as shown (--derivation-path=\"bip25519/3h/6h/9h\") The ledger will ask you twice to confirm this operation. Make sure the baker you see on the ledger screen matches the one you want to use. If you don’t have this information yet, don’t worry. To get the address of the ledger that’s used by default simply go to https://kukai.app and login with ledger, accepting the default derivation path.\nbip is supposed to be more strong in the long term than ed25519, which is the default one. Including it in the command above as shown does not change the default behavior but it shows which path is default so it can be customized for preference and security.\nPutting the baker on a non-default derivation path provides an additional layer of security for your baker at the cost of extra complexity for you. Make sure your setup is clearly documented for your own records.\nAuthorize Ledger to bake for key Having imported your Ledger key to your signer, it’s time to authorize your Ledger to bake for this key.\nbb-cli setup-ledger --main-hwm 1 # Pay careful attention to the value of --main-hwm If your device was used to bake before it might have a “high watermark” aka HWM. If you try to use this device on a testnet, it will not work because the block height on test networks usually starts with 1 while mainnet is up to over a couple of million blocks at the time of writing. If you used to bake on mainnet with the same ledger as you’re trying to use now but it’s been a while, it’s highly recommended to change the 1 above to the current Tezos block, which can be found at.\nThe watermark is simply a record of the lack block number your ledger helped to bake or endorse. If you’re setting up a brand new device that’s not been used for baking before, there is no need to alter the default command above.\nAlways make sure you’re not accidentally going to double bake by using your production ledger and/or setup to bake on a testnet. It’s really easy to make this mistake and the only thing preventing it are your personal standard operating procedures.\nRegister Ledger key as baker on the blockchain For this step your node level must be synced with the latest block on the blockchain explorer. You must also temporarily open your Ledger Tezos Wallet app to register your key as a baker. For all other operations, you must use the Tezos Baking app.\nbb-cli register-key Registering is not necessary if this is already an active baker ledger which is being setup on some kind of failover machine or in a situation where it has not been over 2 weeks of actively baking.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Ghostnet Ghostnet is Tezos’ perpetual testnet. In the context of TezBake, Ghostnet is intended to provide a no-consequences testing environment where you can learn how to properly bake and pay using …","ref":"/tezbake/tutorials/how-to-bake-ghostnet/","tags":"","title":"How to Bake on Ghostnet"},{"body":"TezBake Bootstrapping To bootstrap your TezBake node means to download someone else’s snapshot of the blockchain and import it into your node. This is much faster than synchronizing the blockchain from scratch. There are two ways to bootstrap your node: using a tarball or using a snapshot. The tarball method is faster, but the snapshot method is more reliable and robust.\nPlease be aware that bootstrapping your node could result in your nonce revelation to fail and for you to forfit your endorsement rights for the cycle. This is because by default we’re using rolling snapshots which don’t export full blocks for past cycles by default. If your node baked a special kind of block during the lack cycle, it may be asked to provide its nonce to the network. To do so, it needs to have the .tezos-client data intact from the last cycle and it needs to have the full blocks for the last cycle.\nTo remedy this situation and to never risk forfitting your endorsement rights for a whole cycle, you can simply always use a snapshot that’s at least 4 days (from today) old, when bootstrapping a node. This way you’ll always have at least 1 cycle+ of full blocks in your node’s database from the very beginning. The downside of this method is that it will slow down your bootstrap process by the amount of time it takes to download the full blocks for the past 1 cycle+, which can be up to 2 hours on some slow home networks.\nBootstrap using a tarball (fast) bb-cli bootstrap-node --tarball The --tarball method uses the latest snapshot from https://xtz-shots.io/mainnet/ and downloads it to your node. This is the fastest method, but it’s not as secure as the snapshot method below.\nBootstrap using a snapshot (slow, but more rebust and secure) bb-cli bootstrap-node \u003curl\u003e \u003cblock_hash\u003e # example: bb-cli bootstrap-node https://mainnet-v15.xtz-shots.io/mainnet-3185135.rolling BL8Vq12HX6MJWkB6RLgQAYRKpKZ5fyMoLpWzAoQ6mh55gkKHiQU You can get snapshots in the following places:\nhttps://xtz-shots.io/mainnet/ https://snapshot-api.tezos.marigold.dev/mainnet Verify the hash or checksum provided by the snapshot provider to ensure the snapshot is valid. You can find the correct hashes for the snapshot block on the Tezos blockchain explorers such as: https://tzkt.io/ https://tzstats.com/\nSimply search for the block number in the search field and verify the hash of the block matches the hash provided by the snapshot provider.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"TezBake Bootstrapping To bootstrap your TezBake node means to download someone else’s snapshot of the blockchain and import it into your node. This is much faster than synchronizing the blockchain …","ref":"/tezbake/tutorials/how-to-bootstrap/","tags":"","title":"How to Bootstrap"},{"body":"TezGov Portal Proposal Injection Tutorial TezGov Web Portal: https://gov.tez.capital\nLog into the TezGov portal by using the most secure method available to you.\nWe highly recommend using the direct Ledger login at the top. This method allows you to see the specific details of your vote on your Ledger screen. Use the Remote (signer) method if you have a signer somewhere on your LAN or local computer. This is an option for advanced users. Use the Beacon method if you are using a Beacon enabled wallet like Temple or Kukai. In this case you will not see the exact details of your vote on your Ledger screen and you will instead be asked to sign an arbitrary blob message. This method also works fine but it is inherently less secure than the direct Ledger method. Click New Proposal\nYou have 2 options when submitting a proposal via the TezGov portal.\n(1) You can submit a proposal published by the Tezos core developers by pasting its hash The true names of the proposals crafted by the collective Tezos core developer teams are posted in https://research-development.nomadic-labs.com/blog.html. Any Tezos baker can submit these proposals to the Tezos blockchain by pasting their hash as shown below. In the example given, the baker is submitting the Nairobi proposal.\n(2) You can submit a message to the Tezos bakers and community in the form of a Tezos proposal hash Vanity names are names crafted for the sole purpose to send a message to all ecosystem participants. They are not meant to be passed during the exploration or adoption phases. Vanity proposals are meant to be used as a way to communicate with the whole Tezos community as a delegate (i.e. baker) on Tezos. In the example given, the baker is submitting a signal that on-chain funding is something desirable.\nVanity proposals can be used for other reasons as well but they are never meant to be pursued all the way through. The scope of vanity proposals does not extend past the proposal round. All bakers must take great care not to vote on these proposals once the governance process enters the exploration phase.\nWe encourage all bakers to use this system only for serious ecosystem governance issues. The governance portal functionality is a two way street. The ability to speak does not absolve a baker from the consequences of the baker’s speech.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"TezGov Portal Proposal Injection Tutorial TezGov Web Portal: https://gov.tez.capital\nLog into the TezGov portal by using the most secure method available to you.\nWe highly recommend using the direct …","ref":"/tezgov/tutorials/how-to-inject-proposals/","tags":"","title":"How to Inject Proposals"},{"body":"Monitoring TezBake gives you the option to monitor all Tezos node and baking services. TezBake utilizes the journalctl utility included in most Linux distribution to store and manage its logging. You can extract all logs for a node easily to diagnose any issues. This tutorial will walk you through the process of monitoring your TezBake node.\nMonitor overall TezBake status Run this command to get the status of your baker in a snapshot. After first setting up and starting the baker, you may need to give it a minute or 2 before the status display stops changing and missing some information. If you notice there is an error status on any of the fields after around 3-5 minutes of starting the services, seek out help in the BakeBuddy community as there is something that probably needs tweaking.\nbb-cli info Monitor TezBake logs Monitor full TezBake node and baker logs in real time Using the command below shows everything your baker is doing on a second-by-second basis. If there is a problem to be discovered, it will be mentioned here.\nbb-cli node log -f Monitor limited TezBake node or baker logs in real time Using these commands you can focus on just the node, just the baking/endorsing process or just the accusation (of double baking) processes\nbb-cli node log node -f bb-cli node log baker -f bb-cli node log accuser -f Monitoring just the node process shows blocks being synchronized in real time by your node.\nMonitoring just the baker process shows all attempts to endorse and bake blocks. The baker process works along with the node process to inject blocks and endorsements into the Tezos network.\nMonitoring just the accuser process shows the attempts of your node to call our double baking events on the Tezos network. Normally you should not see anything in this log.\nMonitor TezBake baker logs for the next protocol During times when Tezos protocol are being switched out you will notice that there is a baker process as well as a baker-next process. The same is true about the accuser process. The baker-next process is the baker process that will be used when the next protocol is activated. The baker process will be used until the next protocol is activated. The accuser-next process is the accuser process that will be used when the next protocol is activated. The accuser process will be used until the next protocol is activated.\nbb-cli node log baker-next -f bb-cli node log accuser-next -f The baker-next process will show one of two things.\nProtocol is waiting to start. This means everyone is waiting for the new proposal to be activated on mainnet. Nothing needs to be done until the new protocol is activated The baker process is running like normally. This means the new proposal has already activated and the TezBake needs to be updated to reflect it. There is no penalty for not updating unless you do not update in time for the next proposal. In other words, updating is only necessary when a proposal switch is about to happen. We still recomment that all Tezos bakers update their TezBake to the latest production version as soon as possible to get the latest Octez improvements. Monitor full TezBake signer logs in real time Using the command below shows everything your Ledger is signing or trying to sign. If there is a hardware wallet issue, this log will confirm it.\nbb-cli signer log -f Any questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Monitoring TezBake gives you the option to monitor all Tezos node and baking services. TezBake utilizes the journalctl utility included in most Linux distribution to store and manage its logging. You …","ref":"/tezbake/tutorials/how-to-monitor/","tags":"","title":"How to Monitor"},{"body":"Using TezPay Summary of Using Tezpay Using the TezPay application is through CLI for now and will be carried out through a few commands.\nThis section will review:\nGenerating a payout table for all delegates Generating a test notification (Testing the Twitter/Discord/E-mail notifications from the advanced configuration file) Generating an actual payout Running a continual payout Keeping TezPay up-to-date Before using a command in TezPay, you will need to run two additional commands that will allow you to call the application via commands and set permissions While in the TezPay directory in the terminal, run the following commands (see code and examples below):\nmv tezpay-linux-amd64 tezpay\nchmod +x tezpay\nUsing TezPay: Step 1 - Generating a payout Table Generating a payout table is a took that is useful for Public Bakers because it allows the baker to see the incoming rewards from baking (both block rewards \u0026 fees from delegates), review payout per delegator from their stake, and other data (see below).\nThe command to generate a payout table is as follows (always remember to be in the tezpay directory:\n./tezpay generate-payouts\nThis will generate a payout table, as exampled below:\nNote: the Delegator \u0026 Recipient columns have been hidden\nRepresents the table of invalid delegators that will not be paid out due to not meeting specific thresholds (ie minimum payout threshold/minimum balance) Represents the table of valid delegators that will be paid out The list of Delegators first 4 and last 4 characters of their wallet The list of Recipients of payment first 4 and last 4 characters of their wallet (often the same as Delegator) The delegated balance for each Delegator for that particular cycle Represents the kind of reward given (ie delegator reward, baker reward, and fee income) The amount of the specific reward to be paid out The fee rate for each delegator, will reflect those delegators who have custom fees per the configuration file The fee collected by the baker from each delegator for hosting their delegation The transaction fee to pay out each reward Using TezPay: Step 2 - Testing Notifications This step will be used to test the notification system for your TezPay application. This step will NOT need to be completed every payout, but only when you changes messages to test that it was successful.\nwhile in the tezpay directory, use the command:\n./tezpay test-notify\nUsing TezPay: Step 3 - Initiating a Payout To use the TezPay application to send a payment will require 1 line of code and one additional confirmation while it runs.\nTo run TezPay, run the code:\n./tezpay pay\nThe system will initiate the TezPay application at this point and present a payout table, similar to the table(s) from step 1.\nOnce the table is displayed, the prompt will ask you to confirm the payout, and you need to confirm y or n (see below):\nYou will be asked to confirm, type ‘y’ for yes or ‘n’ for no If you confirm the transaction, the payouts will proceed and your delegates will be paid out, as well as your Baker wallet. Remember, if you are using a separate wallet to payout from your Baker wallet you will need to add funds to cover the payments.\nAt this point you have successfully ran the TezPay application and paid out your delegates. Be sure to check the confirmations and any errors that may have been broadcasted in the terminal (ie, the example above did not send notifications because that was not set up).\nUsing TezPay: Step 4 - Running a Continual Payout To use the TezPay application to send a payment will require 1 line of code and one additional confirmation while it runs.\nTo run TezPay in continual mode, run the command:\n./tezpay continual\nRunning in continual mode will start its first payment a little bit after the current cycle (one during which you launched it) finishes and the next one begins (usually around 30-60 minutes after the beginning of the new cycle).\nIf you would like to start in continual mode but still need to pay your delegators for last cycle, run the command from Step 3. first and then launch TezPay in continual mode.\nSummary: TezPay TezPay is an application that allows for easy payouts for public bakers on the Tezos Blockchain. This allows for significant customizations and flexibility with respect to the payout system and empowers bakers to further take control of their Bakery and aid in decentralizing the Tezos Blockchain.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Using TezPay Summary of Using Tezpay Using the TezPay application is through CLI for now and will be carried out through a few commands.\nThis section will review:\nGenerating a payout table for all …","ref":"/tezpay/tutorials/how-to-pay/","tags":"","title":"How to Pay Stakers"},{"body":"TezGov Portal Set Deposits Limit Tutorial TezGov Web Portal: https://gov.tez.capital\nLog into the TezGov portal by using the most secure method available to you.\nWe highly recommend using the direct Ledger login at the top. This method allows you to see the specific details of your vote on your Ledger screen. Use the Remote (signer) method if you have a signer somewhere on your LAN or local computer. This is an option for advanced users. Use the Beacon method if you are using a Beacon enabled wallet like Temple or Kukai. In this case you will not see the exact details of your vote on your Ledger screen and you will instead be asked to sign an arbitrary blob message. This method also works fine but it is inherently less secure than the direct Ledger method Expand the Tools pane and select Set Deposits Limit\nFill in the amount, in tez, you want to set as your deposits limit and submit\nYou will be asked to confirm the deposits limit on your Ledger device.\nOnce confirmed, the page will refresh within 30 seconds.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"TezGov Portal Set Deposits Limit Tutorial TezGov Web Portal: https://gov.tez.capital\nLog into the TezGov portal by using the most secure method available to you.\nWe highly recommend using the direct …","ref":"/tezgov/tutorials/how-to-set-deposits-limit/","tags":"","title":"How to Set Deposits Limit"},{"body":"Notification setup in Configuration File Summary Notifications can be automatically sent out when payouts are generated using TezPay. The text are configured in the config.json file, however there are preliminary steps needed inorder to be able to utilize these features. This section will review the necessary steps and information needed from platforms that allow for auto-notifications sent via TezPay. **This tutorial is meant for individuals that have zero experience with interacting with these systems - feel free to skip sections if you are an advanced user.** Twitter A Baker can use TezPay to automatically send notifications that payments have been made. This allows for ease of communications for the public baker to the delegates and we will walk through steps to allow for this here. There will be two sections: 1. Twitter Setup 2. TezPay config.json file setup Twitter Setup In order to setup twitter, be sure you are signed in on a browser window to your twitter account. While being signed into Twitter in a seperate browser, navigate to https://developer.twitter.com/ and select ‘Developer Portal’ in the top menu- the developer portal site where you will set up your development account and get the required information for the config.json file and set up permissions. You will then need to fill in some basic information in order to enable the Development Portal profile to be active. be sure that all of the information is correct (if you use multiple twitter accounts be sure the one you want to enable for notifications is the correct one). Once you submit the information for your development profile - you will need to accept the Terms and Conditions. After accepting Terms and Conditions - you will need to verify your e-mail address that you provided by clicking the link in the e-mail sent from Twitter. Once you verify your email - this will automatically link you back to your Developer Portal Site and prompt you for an ‘App Name’ (see TezPay Notif in screen capture). Once you name your App - you will be given 3 seperate Keys. These will be used to inorder to call the Twitter profile that you are looking to send Notifcations to - and sign for the permissions. Be sure to have these saved in a secure place - they will be used later. Once you have the keys secured, click ‘Dashboard’ button in lower right. You will now be in your Twitter Development Dashboard and see the App you created (for this example TezPayNotifs). Click the ‘gear’ icon to continue set-up. Navigate to ‘User Authentication Settings’ section and click ‘Set-up’ to continue. We will fill out the required items for the form under User Authentication settings as follows: i. App Permissions: Select ‘Read and write’ ii. Type of App: Select ‘Web App, Automated App or Bot’\niii. App Info: a. Callback URI/Redirect URL: this can be anything but for this example we will use ‘https://www.TezPayisthebest.com/'\nb. Website URL: this can be anything but for this example we will use ‘https://www.TezPayisthebest.com/'\niv. Click ‘save’ when finished. You will then get your Client ID and Client Secret - copy and save both of these with your other Keys attained earlier. Click ‘Done’\nThis will bring you back to the main screen of the App - navigate to the ‘Keys and Tokens’ toggle at the top of the page. Now, ‘Generate’ an Access Token and secret - write these down and then once you have confirmed you will be ready to edit the config.json in TezPay. Note - be sure the Access Token and Secret has ‘read and write’ permission (see image below). For the Next step - setting up the config.json - you will need four items:\na. API Key and Secret (also known as Consumer Key/Secret)\nb. Access Token and Secret TezPay config.json Setup for Twitter Notifications We will use the API Key and Secret as well as the Access Token and Secret to edit the Config file to allow for permissions and calls to push notifcations upon each successful payout.\nYou will add the following code block at the base of the config.json file to enable the notifications for TezPay. Note that the message_template can be anything and you can use the , , terms to automatically fill in these terms for each cycle. notifications: [\n{\naccess_token: Your_Acces_Token\naccess_token_secret: Your_Access_Token_Secret\nconsumer_key: Your_Consumer_Key\nconsumer_secret: Your_Consumer_Key_Secret\nmessage_template: Rewards for \u003cCycle\u003e have been paid to \u003cDelegators\u003e delegates in amount of \u003cDistributedRewards\u003e using #TezPay.👀 XTZ baked with bakebuddy.xyz! We donate to wallet tz1R2GnBudU97Lra8Q3VDG7cUooNvUQ9ghCs to fund future development in Tezos. #cerberusbakery #tezos.\ntype: twitter\n}\n] Once you have filled in the necessary information - you have setup Notifications for Twitter! Test the notification by using command: a. tezpay test-notify Any questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Notification setup in Configuration File Summary Notifications can be automatically sent out when payouts are generated using TezPay. The text are configured in the config.json file, however there are …","ref":"/tezpay/tutorials/how-to-notify/","tags":"","title":"How to Setup Notifications"},{"body":"Troubleshooting Troubleshooting BakeBuddy mostly comes in during the installation phase, when an error is encountered during the setup process.\nInstallation errors If you encounter an installation issue, run the setup command again with the --log-level=trace option, for example:\nbb-cli setup -a --log-level=trace You can add --log-level=trace regardless of the setup type that’s being attempted, whether it’s on Ghostnet or some other testnet.\nBlockchain errors Sometimes, you will notice that bb-cli info never seems to show that you are able to fully synchronize your node. Upon looking at it you may find that your node is stuck on a certain block. This is usually due to a problem with the Tezos node itself. The Tezos node is a separate process from the TezBake process. If you are having issues with the Tezos node, you can try to restart it with the following command:\nbb-cli restart You may see an error like the one below, which indicates your node needs to be bootstrapped with a fresh copy of the Tezos blockchain.\nbaker@baker-VirtualBox:~$ bb-cli node log node -f -- Logs begin at Wed 2022-05-18 14:16:28 CEST. -- mai 20 08:51:31 baker-VirtualBox systemd[1]: Stopped bb-default-node node service. mai 20 08:51:31 baker-VirtualBox systemd[1]: Started bb-default-node node service. mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.414 - node.config.validation: the node configuration has been successfully validated. mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.415 - node.main: read identity file (peer_id = idqueYR61yjX8QfsiLru4FEZFSWi7m) mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.415 - node.main: starting the Tezos node v13.0 (cb9f439e) (chain = TEZOS_MAINNET) mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.415 - node.main: disabled local peer discovery mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.415 - node: shell-node initialization: bootstrapping mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.678 - node: shell-node initialization: p2p_maintain_started mai 20 08:51:32 baker-VirtualBox node[5868]: May 20 08:51:32.678 - external_block_validator: initialized mai 20 08:51:33 baker-VirtualBox node[5868]: May 20 08:51:33.599 - external_block_validator: block validator process started with pid 5874 mai 20 08:51:43 baker-VirtualBox node[5868]: May 20 08:51:43.267 - node.store: the store is in an inconsistent state: mai 20 08:51:43 baker-VirtualBox node[5868]: May 20 08:51:43.267 - node.store: Error: mai 20 08:51:43 baker-VirtualBox node[5868]: May 20 08:51:43.267 - node.store: The block 'current_head' is unexpectedly missing from the store. mai 20 08:51:43 baker-VirtualBox node[5868]: May 20 08:51:43.267 - node.store: mai 20 08:51:43 baker-VirtualBox node[5868]: May 20 08:51:43.267 - node.store: attempting to restore the store's consistency... Any questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Troubleshooting Troubleshooting BakeBuddy mostly comes in during the installation phase, when an error is encountered during the setup process.\nInstallation errors If you encounter an installation …","ref":"/tezbake/tutorials/how-to-troubleshoot/","tags":"","title":"How to Troubleshoot"},{"body":"TezBake Updating The TezBake software consists of four components:\nami - https://github.com/alis-is/ami https://github.com/alis-is/ami eli - Lua Interpreter \u0026 Essential libraries for simple cross platform scripting - https://github.com/alis-is/eli bb-cli - Command line interface for setting and monitoring your baker, using the help of the 2 tools above Octez binaries - Tezos node binaries published by the Tezos core developers - https://gitlab.com/tezos/tezos/-/releases We regularly update all parts of the TezBake stack and the Tezos core developments regularly publish new Octez versions and protocols. All mandatory (to keep baking) and optional updates are posted across Tez.Capital social media channels. Updates must be performed manually at this time, to ensure the Tezos node operator is the only person able to control their baking operation.\nThere are a few upgrade methods that are supported depending on what the Tezos node operator wants to do:\nUpdate Octez binaries only (#4 only) Using this upgrade method is recommended when one only wants to change or update the Tezos binaries, in cases such as: Tezos protocol forkless update preparation Removal of stale protocol after forkless update Updating from old Octez version to new Octez version, while continuing to run the same Tezos protocol Update ami \u0026 eli and Octez binaries (#1, #2, #4) Using this upgrade method is recommended for the same reasons as above, as well as: Getting the latest ami \u0026 eli fixes and improvements Update the entire TezBake software stack (#1, #2, #3, #4) Using this upgrade method is recommended for all the same reasons listes so far, as well as: Getting the latest bb-cli improvements and fixes Update only bb-cli to the latest ALPHA version to receive the latest bb-cli improvements and proposed test fixes (#3 only) Using this upgrade method is recommended when one only wants to change or update the bb-cli utility, in cases such as: bb-cli is testing improvements and fixes such as new formatting or output options Updating just bb-cli without running any setup commands does not change the Tezos node or baking process in any way Which TezBake upgrade method should I use? We will sometimes specify which upgrade method to use by referencing its number. If a number is not specified, use the guidelines below to determine which method to use:\nIf you’d like to be as thorough as possible and ensure you have the latest of everything, use the #3 method. Using this method is not necessary if there has not been a new bb-cli version. If you want to get most improvements and fixes from the TezBake side as well as from the Tezos core dev side, use the #2 method. This is the recommended option for most circumstances. If you just want to keep baking on Tezos or get the latest Octez improvements without modifying any other components, use the #1 method Update Octez binaries only (#1) bb-cli upgrade Update ami \u0026 eli and Octez binaries (#2) bb-cli upgrade -a Update the entire TezBake software stack (#3) First update your bb-cli binary to the latest version:\n# If you have a regular Intel or AMD computer that's not \"ARM\" based: cd /tmp \u0026\u0026 wget https://gitlab.com/groktech/bakebuddy-cli/-/raw/main/bb-cli-linux-amd64 \u0026\u0026 chmod +x bb-cli-linux-amd64 sudo mv bb-cli-linux-amd64 /usr/sbin/bb-cli # you may be prompted for sudo password # If you have an ARM based computer such as a Raspberry Pi: cd /tmp \u0026\u0026 wget https://gitlab.com/groktech/bakebuddy-cli/-/raw/main/bb-cli-linux-arm64 \u0026\u0026 chmod +x bb-cli-linux-arm64 sudo mv bb-cli-linux-arm64 /usr/sbin/bb-cli # you may be prompted for sudo password Then update the rest of the TezBake software stack:\nbb-cli upgrade -a Update bb-cli to the ALPHA testing version (#4) # If you have a regular Intel or AMD computer that's not \"ARM\" based: cd /tmp \u0026\u0026 wget https://gitlab.com/groktech/bakebuddy-cli/-/raw/main/ALPHA-bb-cli-linux-amd64 \u0026\u0026 chmod +x ALPHA-bb-cli-linux-amd64 sudo mv ALPHA-bb-cli-linux-amd64 /usr/sbin/bb-cli # you may be prompted for sudo password # If you have an ARM based computer such as a Raspberry Pi: cd /tmp \u0026\u0026 wget https://gitlab.com/groktech/bakebuddy-cli/-/raw/main/ALPHA-bb-cli-linux-arm64 \u0026\u0026 ALPHA-bb-cli-linux-arm64 sudo mv ALPHA-bb-cli-linux-arm64 /usr/sbin/bb-cli # you may be prompted for sudo password What should I do after updating? After all updates and changes to your Tezos node, always ensure your baking process continues successfully by monitoring its performance on https://TzStats.com and https://TzKT.io.\nCheck your TezBake stack versions to ensure they are up to date:\nbb-cli version --all You should see the expected Octez version along with the release date of the binaries.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"TezBake Updating The TezBake software consists of four components:\nami - https://github.com/alis-is/ami https://github.com/alis-is/ami eli - Lua Interpreter \u0026 Essential libraries for simple cross …","ref":"/tezbake/tutorials/how-to-update/","tags":"","title":"How to Update"},{"body":"Keeping TezPay Up-to-Date For access to future releases via Linux CLI, run the following command from within the folder where tezpay is located:\ncd tezpay wget -q https://raw.githubusercontent.com/alis-is/tezpay/main/install.sh -O /tmp/install.sh \u0026\u0026 sh /tmp/install.sh Any questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Keeping TezPay Up-to-Date For access to future releases via Linux CLI, run the following command from within the folder where tezpay is located:\ncd tezpay wget -q …","ref":"/tezpay/tutorials/how-to-update/","tags":"","title":"How to Update"},{"body":" TezBake TezPay TezGov Important Links Source Code https://github.com/tez-capital/ https://gitlab.com/groktech/ Chat/Support Discord Telegram Social Media Twitter: Tez Capital Twitter: TezBake Twitter: TezPay Twitter: TezGov Twitter: alis-is (Berry Studio) Twitter: GrokTech Other Medium ","categories":"","description":"","excerpt":" TezBake TezPay TezGov Important Links Source Code https://github.com/tez-capital/ https://gitlab.com/groktech/ Chat/Support Discord Telegram Social Media Twitter: Tez Capital Twitter: TezBake …","ref":"/","tags":"","title":"Tez Capital Documentation Portal"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tezbake/","tags":"","title":"TezBake"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tezgov/","tags":"","title":"TezGov"},{"body":"Baking Best Practices This is the description of the ideal TezBake hardware setup and best practice for someone who wants to perform an excellent job baking on-premise, in their home, office or data center (in person) at a reasonable cost.\nYou can get an idea of what kind of computer needs to be dedicated to Tezos baking by looking at the guide below https://www.fxhash.xyz/article/how-to-setup-your-own-tezos-bakery\nRecommended Hardware Setup Two computers (see link above) with equal or equivalent hardware specs (one optional) Two Ledger Nano S or Nano S Plus hardware wallets (one optional) One UPS battery backup (optional) Two computers You will need two computers and both computers will be running TezBake. One computer will be used for baking and the other computer will be used as a backup. A manual failover of the Ledger hardware will be necessary to start baking on the second computer if the first computer fails. The second computer is optional, but it is highly recommended. If you only have one computer, you will need to have a backup plan in place in case the computer fails.\nTwo Ledger Nano S or Nano S Plus While having two computers is somewhat optional, especially for a smaller baker, having two Ledger Nano S or Nano S Plus hardware wallets is very highly recommended. You will need to have two hardware wallets for the following reasons:\nIn the event of Ledger hardware failure To transfer tez to your payment wallet or elsewhere, without interrupting baking To vote on Tezos governance proposals, without interrupting baking Note that you must never simultanerously use two hardware wallets to bake for the same baking address. This will result in a double baking or double endorsing offense and you will be slashed. It’s very easy to avoid by:\nNot authorizing the second hardware wallet to bake for the same address before it’s needed Not importing your baking wallet into your backup computer before it’s needed Before changing any Ledger connections, always ensuring that only one hardware wallet is baking for the address Not installing TezBake on second computer before it’s needed. If you have a fast internet connection, the entire setup process takes just a few minutes. If you only have one hardware wallet and it fails, you will be down until you get a second one and set it up to bake.\nOne UPS battery backup Having at least one UPS device which has your ISP connection and your baking computer connected to it is highly recommended. This will ensure that your baking computer will not be interrupted in the event of electrical failure up to the amount of time supported by your battery. The bigger the battery, the more time your computer will keep baking when power fails.\nIf your baking computer and your ISP are in different rooms or on different electrical outlets, you need to ensure that each one is independently supplied with UPS power.\nBad Practices Using Wi-Fi Using DHCP Using your daily use computer or laptop Not using TezBake Discord or Telegram monitoring bots Using Wi-Fi Wi-Fi is not as realiable as a wired connection and can cause strange and random issues. It is highly recommended that you use a wired connection for your baking computer.\nUsing DHCP DHCP automatically assigns IP addresses to your computer. This can cause issues with your baking computer in the event where DHCP is unable to automatically renew its lease. It is highly recommended that you use a static IP address for your baking computer.\nUsing your daily use computer or laptop If you use your daily computer for baking, it’s much more likely to have issues because of accidentally affecting either your baker’s connection to the internet or your Ledger’s connection to your baker.\nNot using TezBake Discord or Telegram monitoring bots The TezBake Discord and Telegram bots are designed to monitor your baker’s status and alert you if there are any issues. It is highly recommended that you use these bots to monitor your baker. Should your baker go offline, you will be notified immediately and can take action to fix the issue.\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Baking Best Practices This is the description of the ideal TezBake hardware setup and best practice for someone who wants to perform an excellent job baking on-premise, in their home, office or data …","ref":"/getting-started/best-practices/","tags":"","title":"Tezos Baking Best Practices"},{"body":"Pubic Baking Public baking and private baking are the same thing from the perspective of the blockchain. The only difference is that a public baker has announced themselves to the Tezos community and is willing to accept delegations. A private baker is not willing to accept delegations from delegators. A private baker cannot stop these delegations from occuring but a private baker is not expected to pay out rewards to delegators.\nOn Tezos, bakers (a.k.a. delegates) are paid directly by the blockchain for themselves as well as for their delegators. It’s up to each and every baker to determine their own fee structure and payment policies. It’s also up to each baker as to which payment software they will use to distribute rewards to delegators. There are several different payment software options available to bakers. Some bakers use their own custom software, some bakers use a third party payment software, and some bakers use a combination of both. We recommend using our TezPay payment software. TezPay allows you to fully automate the distribution of rewards to delegators.\nA public baker has to contact two entities within the Tezos ecosystem to be added to the list of public bakers within each of their ecosystems. The entities in question all have their own methods to determine your public baker details, such as your fee and payment policies, via self-reporting. You will be asked to self-report your details to each of the following entities:\nhttps://tzstats.com (BlockWatch) The best place to contact them is: tzstats@blockwatch.cc https://tzkt.io / https://baking-bad.org (Baking Bad) The best place to contact them is: https://t.me/baking_bad_chat Most wallets and services on Tezos pull their baker information from one of these sources.\nYou also have the option of contacting the folks at Ledger directly in order to be listed as a baker on their Ledger Live wallet. You can contact them via the following link: https://support.ledger.com/hc/en-us/requests/new\nAny questions/comments/concerns? Please contact the Tez Capital team on Discord or Telegram\n","categories":"","description":"","excerpt":"Pubic Baking Public baking and private baking are the same thing from the perspective of the blockchain. The only difference is that a public baker has announced themselves to the Tezos community and …","ref":"/getting-started/public-baking/","tags":"","title":"Tezos Public Baking"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tezpay/","tags":"","title":"TezPay"},{"body":"TezBake A payment distribution tool developed by Tezos Capital for Bakers on the Tezos Blockchain\nBakeBuddy CLI is a command line tool for Linux which integrates its function with the official Tezos binary images provided by the Tezos developers, with the goal to deliver a seamless experience in installing, upgrading and monitoring a Tezos node. BakeBuddy CLI (BB-CLI) is the tool used by BakeBuddy GUI (BB-GUI) “under the hood” to provide the core functionality. There are 2 ways to bake on Tezos depending on your intention. You can learn how to bake on a testnet with fake tokens or you can bake on mainnet with real tez. Either way BakeBuddy has your back.\nTutorials ","categories":"","description":"","excerpt":"TezBake A payment distribution tool developed by Tezos Capital for Bakers on the Tezos Blockchain\nBakeBuddy CLI is a command line tool for Linux which integrates its function with the official Tezos …","ref":"/tezbake/tutorials/","tags":"","title":"Tutorials"},{"body":"TezBake A payment distribution tool developed by Tezos Capital for Bakers on the Tezos Blockchain\nBakeBuddy CLI is a command line tool for Linux which integrates its function with the official Tezos binary images provided by the Tezos developers, with the goal to deliver a seamless experience in installing, upgrading and monitoring a Tezos node. BakeBuddy CLI (BB-CLI) is the tool used by BakeBuddy GUI (BB-GUI) “under the hood” to provide the core functionality. There are 2 ways to bake on Tezos depending on your intention. You can learn how to bake on a testnet with fake tokens or you can bake on mainnet with real tez. Either way BakeBuddy has your back.\nTutorials ","categories":"","description":"","excerpt":"TezBake A payment distribution tool developed by Tezos Capital for Bakers on the Tezos Blockchain\nBakeBuddy CLI is a command line tool for Linux which integrates its function with the official Tezos …","ref":"/tezgov/tutorials/","tags":"","title":"Tutorials"},{"body":"TezPay A payment distribution tool that’s easy to setup and automate\nThe goal of this document is to instruct a baker on how to set up TezPay and how to pay-out the bakers delegates. The workflow will accomplish these tasks from Command-line-interface(CLI) - if you do not have experience in CLI this tutorial will include screen captures as well as examples and explanations of the steps. This tutorial is meant to cover all skill levels from novice to expert.\nTutorials ","categories":"","description":"","excerpt":"TezPay A payment distribution tool that’s easy to setup and automate\nThe goal of this document is to instruct a baker on how to set up TezPay and how to pay-out the bakers delegates. The workflow will …","ref":"/tezpay/tutorials/","tags":"","title":"Tutorials"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tezpay/configuration/","tags":"","title":"Configuration"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tezpay/extensions/","tags":"","title":"Extensions"},{"body":"{ tezpay_config_version: 0 baker: \"\" payouts: { wallet_mode: local-private-key payout_mode: actual fee: 0.05 } delegators: { requirements: {} } income_recipients: {} network: { rpc_url: https://rpc-mainnet.groktech.xyz/ tzkt_url: https://api.tzkt.io/ explorer: https://tzkt.io/ } overdelegation: { protect: true } } ","categories":"","description":"","excerpt":"{ tezpay_config_version: 0 baker: \"\" payouts: { wallet_mode: local-private-key payout_mode: actual fee: 0.05 } delegators: { requirements: {} } income_recipients: {} network: { rpc_url: …","ref":"/tezpay/configuration/examples/default/","tags":"","title":"default"},{"body":"NOTE: all bellow examples are just sample data to showcase fields used in data passed to hooks.\nafter_candidates_generated This hook is capable of mutating data.\n{ \"cycle\": 580, \"candidates\": [ { \"source\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"recipient\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"fee_rate\": 5, \"balance\": \"1000000000\", \"is_invalid\": true, \"is_emptied\": true, \"is_baker_paying_tx_fee\": true, \"is_baker_paying_allocation_tx_fee\": true, \"invalid_because\": \"reason\" } ] } after_bonds_distributed This hook is capable of mutating data.\n{ \"cycle\": 580, \"candidates\": [ { \"source\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"recipient\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"fee_rate\": 5, \"balance\": \"1000000000\", \"is_invalid\": true, \"is_emptied\": true, \"is_baker_paying_tx_fee\": true, \"is_baker_paying_allocation_tx_fee\": true, \"invalid_because\": \"reason\", \"bonds_amount\": \"1000000000\", \"tx_kind\": \"fa1\", \"fa_token_id\": \"10\", \"fa_contract\": \"KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT\" } ] } check_balance This hook is NOT capable of mutating data.\n{ \"skip_tez_check\": true, \"is_sufficient\": true, \"message\": \"This message is used to carry errors from hook to the caller.\", \"payouts\": [ { \"source\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"recipient\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"fee_rate\": 5, \"balance\": \"1000000000\", \"is_invalid\": true, \"is_emptied\": true, \"is_baker_paying_tx_fee\": true, \"is_baker_paying_allocation_tx_fee\": true, \"invalid_because\": \"reason\", \"bonds_amount\": \"1000000000\", \"tx_kind\": \"fa1\", \"fa_token_id\": \"10\", \"fa_contract\": \"KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT\" } ] } on_fees_collection This hook is capable of mutating data.\n{ \"cycle\": 580, \"candidates\": [ { \"source\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"recipient\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"fee_rate\": 5, \"balance\": \"1000000000\", \"is_invalid\": true, \"is_emptied\": true, \"is_baker_paying_tx_fee\": true, \"is_baker_paying_allocation_tx_fee\": true, \"invalid_because\": \"reason\", \"bonds_amount\": \"1000000000\", \"tx_kind\": \"fa1\", \"fa_token_id\": \"10\", \"fa_contract\": \"KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT\", \"fee\": \"1000000000\" } ] } after_payouts_blueprint_generated This hook is NOT capable of mutating data currently.\n{ \"cycle\": 1, \"payouts\": [ { \"baker\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"delegator\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"cycle\": 1, \"recipient\": \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\", \"kind\": \"invalid\", \"tx_kind\": \"fa1\", \"fa_token_id\": \"10\", \"fa_contract\": \"KT18amZmM5W7qDWVt2pH6uj7sCEd3kbzLrHT\", \"delegator_balance\": \"1000000000\", \"amount\": \"1000000000\", \"fee_rate\": 5, \"fee\": \"1000000000\", \"op_limits\": { \"transaction_fee\": 1, \"storage_limit\": 1, \"gas_limit\": 1 }, \"note\": \"reason\" } ], \"summary\": { \"cycle\": 1, \"delegators\": 2, \"paid_delegators\": 1, \"staking_balance\": \"1000000000\", \"cycle_fees\": \"1000000000\", \"cycle_rewards\": \"1000000000\", \"distributed_rewards\": \"1000000000\", \"bond_income\": \"1000000000\", \"fee_income\": \"1000000000\", \"total_income\": \"1000000000\", \"donated_bonds\": \"1000000000\", \"donated_fees\": \"1000000000\", \"donated_total\": \"1000000000\", \"timestamp\": \"2023-01-01T00:00:00Z\" } } ","categories":"","description":"","excerpt":"NOTE: all bellow examples are just sample data to showcase fields used in data passed to hooks.\nafter_candidates_generated This hook is capable of mutating data.\n{ \"cycle\": 580, \"candidates\": [ { …","ref":"/tezpay/extensions/reference/hooks/","tags":"","title":"Hooks"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tezpay/reference/","tags":"","title":"Reference"},{"body":"{ tezpay_config_version: 0 baker: \"\" payouts: { wallet_mode: local-private-key payout_mode: ideal fee: 0.075 baker_pays_transaction_fee: true baker_pays_allocation_fee: true minimum_payout_amount: 10.5 } delegators: { requirements: { minimum_balance: 0.5 } ignore: [ tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU tz1burnburnburnburnburnburnburjAYjjX ] overrides: { tz1P6WKJu2rcbxKiKRZHKQKmKrpC9TfW1AwM: { recipient: \"\" fee: 0 minimum_balance: 2.5 } } fee_overrides: { .5: [ \"\" ] 1: [ tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU tz1burnburnburnburnburnburnburjAYjjX ] } } income_recipients: { bonds: { tz1P6WKJu2rcbxKiKRZHKQKmKrpC9TfW1AwM: 0.455 tz1X7U9XxVz6NDxL4DSZhijME61PW45bYUJE: 0.545 } fees: { tz1P6WKJu2rcbxKiKRZHKQKmKrpC9TfW1AwM: 0.455 tz1X7U9XxVz6NDxL4DSZhijME61PW45bYUJE: 0.545 } donate: 0.025 donations: { tz1P6WKJu2rcbxKiKRZHKQKmKrpC9TfW1AwM: 0.1 tz1UGkfyrT9yBt6U5PV7Qeui3pt3a8jffoWv: 0.9 } } network: { rpc_url: https://rpc-mainnet.groktech.xyz/ tzkt_url: https://api.tzkt.io/ explorer: https://tzstats.com/ ignore_kt: true } overdelegation: { protect: true } notifications: [ { type: discord webhook_url: https://my-discord-webhook.com/ message_template: my awesome message } { type: discord webhook_url: https://my-admin-discord-webhook.com/ message_template: my awesome message admin: true } { type: discord webhook_id: webhook id webhook_token: webhook token message_template: my awesome message } { type: twitter access_token: your access token access_token_secret: your access token secret consumer_key: your consumer key consumer_secret: your consumer secret message_template: my awesome message } { type: telegram api_token: your api token receivers: [ list of chat numbers without quotes -1234567890 ] message_template: my awesome message } { type: email sender: my@email.is smtp_server: smtp.gmail.com:443 smtp_identity: \"\" smtp_username: my@email.is smtp_password: password123 recipients: [ my-follower1@email.is my-follower2@email.is ] message_template: my awesome message } { type: external path: path to external notificator binary args: [ --kind \u003ckind\u003e \u003cdata\u003e ] } ] extensions: [ { name: log-extension command: python3 args: [ /path/to/my/extension.py ] kind: stdio configuration: { LOG_FILE: path/to/my/extension.log } hooks: [ { id: all mode: ro } ] } { name: fee-extension command: /path/to/my/extension.bin args: [ --config /path/to/my/extension.config ] kind: stdio configuration: { FEE: 0 TOKEN: \"1\" CONTRACT: KT1Hkg6qgV3VykjgUXKbWcU3h6oJ1qVxUxZV } hooks: [ { id: after_candidates_generated mode: rw } ] } ] } ","categories":"","description":"","excerpt":"{ tezpay_config_version: 0 baker: \"\" payouts: { wallet_mode: local-private-key payout_mode: ideal fee: 0.075 baker_pays_transaction_fee: true baker_pays_allocation_fee: true minimum_payout_amount: …","ref":"/tezpay/configuration/examples/sample/","tags":"","title":"sample"},{"body":"tezpay TEZPAY\nSynopsis TEZPAY 0.1.13-alpha - the tezos reward distributor Copyright © 2023 alis.is\nOptions --disable-donation-prompt Disable donation prompt -h, --help help for tezpay -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay continual\t- continual payout tezpay generate-payouts\t- generate payouts tezpay import-configuration\t- seed configuration from tezpay pay\t- manual payout tezpay statistics\t- prints earning stats tezpay test-extension\t- extension test tezpay test-notify\t- notification test tezpay transfer\t- transfers tez to specified address tezpay version\t- prints tezpay version Auto generated by spf13/cobra on 17-May-2023 ","categories":"","description":"","excerpt":"tezpay TEZPAY\nSynopsis TEZPAY 0.1.13-alpha - the tezos reward distributor Copyright © 2023 alis.is\nOptions --disable-donation-prompt Disable donation prompt -h, --help help for tezpay -l, --log-level …","ref":"/tezpay/reference/cmd/tezpay/","tags":"","title":"tezpay"},{"body":"tezpay continual continual payout\nSynopsis runs payout until stopped manually\ntezpay continual [flags] Options -c, --cycle int initial cycle --force-confirmation-prompt forces confirmation prompts for each payout -h, --help help for continual --no-separate-fa disables fa transfers separation (mixes txs and fa transfers within batches) --no-separate-sc disables smart contract separation (mixes txs and smart contract calls within batches) Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 17-May-2023 ","categories":"","description":"","excerpt":"tezpay continual continual payout\nSynopsis runs payout until stopped manually\ntezpay continual [flags] Options -c, --cycle int initial cycle --force-confirmation-prompt forces confirmation prompts for …","ref":"/tezpay/reference/cmd/tezpay_continual/","tags":"","title":"tezpay_continual"},{"body":"tezpay generate-payouts generate payouts\nSynopsis generates payouts without further processing\ntezpay generate-payouts [flags] Options -c, --cycle int cycle to generate payouts for -h, --help help for generate-payouts --skip-balance-check skips payout wallet balance check --to-file string saves generated payouts to specified file Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 17-May-2023 ","categories":"","description":"","excerpt":"tezpay generate-payouts generate payouts\nSynopsis generates payouts without further processing\ntezpay generate-payouts [flags] Options -c, --cycle int cycle to generate payouts for -h, --help help for …","ref":"/tezpay/reference/cmd/tezpay_generate-payouts/","tags":"","title":"tezpay_generate-payouts"},{"body":"tezpay import-configuration seed configuration from\nSynopsis generates configuration based on configuration from others payout distribution tools\ntezpay import-configuration \u003ckind\u003e \u003csource-file\u003e [flags] Options -h, --help help for import-configuration Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 17-May-2023 ","categories":"","description":"","excerpt":"tezpay import-configuration seed configuration from\nSynopsis generates configuration based on configuration from others payout distribution tools\ntezpay import-configuration \u003ckind\u003e \u003csource-file\u003e …","ref":"/tezpay/reference/cmd/tezpay_import-configuration/","tags":"","title":"tezpay_import-configuration"},{"body":"tezpay pay manual payout\nSynopsis runs manual payout\ntezpay pay [flags] Options --confirm automatically confirms generated payouts -c, --cycle int cycle to generate payouts for --from-file string loads payouts from file instead of generating on the fly -h, --help help for pay --no-separate-fa disables fa transfers separation (mixes txs and fa transfers within batches) --no-separate-sc disables smart contract separation (mixes txs and smart contract calls within batches) --notificator string Notify through specific notificator --report-to-stdout prints them to stdout (wont write to file) -s, --silent suppresses notifications --skip-balance-check skips payout wallet balance check Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 17-May-2023 ","categories":"","description":"","excerpt":"tezpay pay manual payout\nSynopsis runs manual payout\ntezpay pay [flags] Options --confirm automatically confirms generated payouts -c, --cycle int cycle to generate payouts for --from-file string …","ref":"/tezpay/reference/cmd/tezpay_pay/","tags":"","title":"tezpay_pay"},{"body":"tezpay statistics prints earning stats\nSynopsis prints out earning statiscs\ntezpay statistics [flags] Options --cycles int number of cycles to collect statistics from (default 10) -h, --help help for statistics --last-cycle int last cycle to collect statistics from (has priority over --cycles) Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 17-May-2023 ","categories":"","description":"","excerpt":"tezpay statistics prints earning stats\nSynopsis prints out earning statiscs\ntezpay statistics [flags] Options --cycles int number of cycles to collect statistics from (default 10) -h, --help help for …","ref":"/tezpay/reference/cmd/tezpay_statistics/","tags":"","title":"tezpay_statistics"},{"body":"tezpay test-extension extension test\nSynopsis initializes and executes test hook agains extensions\ntezpay test-extension [flags] Options -h, --help help for test-extension Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 17-May-2023 ","categories":"","description":"","excerpt":"tezpay test-extension extension test\nSynopsis initializes and executes test hook agains extensions\ntezpay test-extension [flags] Options -h, --help help for test-extension Options inherited from …","ref":"/tezpay/reference/cmd/tezpay_test-extension/","tags":"","title":"tezpay_test-extension"},{"body":"tezpay test-notify notification test\nSynopsis sends test notification\ntezpay test-notify [flags] Options -h, --help help for test-notify --notificator string Notify through specific notificator Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 17-May-2023 ","categories":"","description":"","excerpt":"tezpay test-notify notification test\nSynopsis sends test notification\ntezpay test-notify [flags] Options -h, --help help for test-notify --notificator string Notify through specific notificator …","ref":"/tezpay/reference/cmd/tezpay_test-notify/","tags":"","title":"tezpay_test-notify"},{"body":"tezpay transfer transfers tez to specified address\nSynopsis transfers tez to specified address from payout wallet\ntezpay transfer \u003cdestination\u003e \u003camount tez\u003e [flags] Options --confirm automatically confirms transfer -h, --help help for transfer --mutez amount in mutez Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 17-May-2023 ","categories":"","description":"","excerpt":"tezpay transfer transfers tez to specified address\nSynopsis transfers tez to specified address from payout wallet\ntezpay transfer \u003cdestination\u003e \u003camount tez\u003e [flags] Options --confirm automatically …","ref":"/tezpay/reference/cmd/tezpay_transfer/","tags":"","title":"tezpay_transfer"},{"body":"tezpay version prints tezpay version\nSynopsis generates payouts without further processing\ntezpay version [flags] Options -h, --help help for version Options inherited from parent commands --disable-donation-prompt Disable donation prompt -l, --log-level string Sets log level format (trace/debug/info/warn/error) (default \"info\") -o, --output-format string Sets output log format (json/text/auto) (default \"auto\") -p, --path string path to working directory (default \".\") --signer string Override signer --skip-version-check Skip version check SEE ALSO tezpay\t- TEZPAY Auto generated by spf13/cobra on 17-May-2023 ","categories":"","description":"","excerpt":"tezpay version prints tezpay version\nSynopsis generates payouts without further processing\ntezpay version [flags] Options -h, --help help for version Options inherited from parent commands …","ref":"/tezpay/reference/cmd/tezpay_version/","tags":"","title":"tezpay_version"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"}]